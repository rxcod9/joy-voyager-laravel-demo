name: tests

on:
  push:
    branches:
      - 'main'
  pull_request:
    types:
      - synchronize
      - opened
      - edited
      - reopened

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: [8.1]
        laravel: ['~9.0']

    name: 'PHP ${{ matrix.php }} / ${{ matrix.laravel }}'

    steps:
      - uses: actions/checkout@master

      # Configure PHP
      - name: Select PHP version
        uses: shivammathur/setup-php@master
        with:
          php-version: '${{ matrix.php }}'
          extensions: mbstring, pdo_sqlite, fileinfo, gd
          coverage: none

      # Configure NPM
      - uses: actions/setup-node@v3
        with:
          node-version: '14.x'

      # Install PHP dependencies
      - name: Install Composer dependencies
        run: composer require "illuminate/support:${{ matrix.laravel }}"

      # Install legacy factories for Laravel 8
      - name: Install legacy factories for Laravel
        if: ${{ matrix.laravel == '8.*' }}
        run: composer require laravel/legacy-factories

      # Display installed laravel version
      - name: Show laravel version
        run: composer show laravel/framework

      # Install NPM dependencies
      - name: Install Dependencies
        run: npm install

      # Build static assets
      - name: Compile Assets
        run: npm run prod
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit

#       # Run phpunit tests
#       - name: Run tests
#         run: ./vendor/bin/phpunit
